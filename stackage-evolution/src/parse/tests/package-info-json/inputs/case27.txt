spec :: Spec
spec = do
  let exampleLegend = SemanticTokensLegend (List [SttProperty, SttType, SttClass]) (List [StmUnknown "private", StmStatic])
      exampleTokens1 = [
        SemanticTokenAbsolute 2 5 3 SttProperty [StmUnknown "private", StmStatic]
        , SemanticTokenAbsolute 2 10 4 SttType []
        , SemanticTokenAbsolute 5 2 7 SttClass []
        ]
      exampleTokens2 = [
        SemanticTokenAbsolute 3 5 3 SttProperty [StmUnknown "private", StmStatic]
        , SemanticTokenAbsolute 3 10 4 SttType []
        , SemanticTokenAbsolute 6 2 7 SttClass []
        ]

      bigNumber :: UInt
      bigNumber = 100000
      bigTokens =
        unfoldr (\i -> if i == bigNumber then Nothing else Just (SemanticTokenAbsolute i 1 1 SttType [StmUnknown "private", StmStatic], i+1)) 0
      -- Relativized version of bigTokens
      bigTokensRel =
        unfoldr (\i -> if i == bigNumber then Nothing else Just (SemanticTokenRelative (if i == 0 then 0 else 1) 1 1 SttType [StmUnknown "private", StmStatic], i+1)) 0

      -- One more order of magnitude makes diffing more-or-less hang - possibly we need a better diffing algorithm, since this is only ~= 200 tokens at 5 ints per token
      -- (I checked and it is the diffing that's slow, not turning it into edits)
      smallerBigNumber :: UInt
      smallerBigNumber = 1000
      bigInts :: [UInt]
      bigInts =
        unfoldr (\i -> if i == smallerBigNumber then Nothing else Just (1, i+1)) 0
      bigInts2 :: [UInt]
      bigInts2 =
        unfoldr (\i -> if i == smallerBigNumber then Nothing else Just (if even i then 2 else 1, i+1)) 0